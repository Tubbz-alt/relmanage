# Generated by: conda skeleton pypi qualname
{% set name = "qualname" %}
{% set version = "0.1.0" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "277cf6aa4b2ad36beed1153cfa7bf521b210d54fbecb3d8eea0c5679cecc9ed8" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python
    - setuptools
  run:
    - python

about:
  home: https://github.com/wbolster/qualname
  license: BSD License
  license_family: BSD
  license_file: ''
  summary: __qualname__ emulation for older Python versions
  description: "========\nqualname\n========\n\nPython module to emulate the ``__qualname__`` attribute for classes and methods\n(Python 3.3+) in older Python versions. See `PEP 3155`__ for details.\n\n\
    __ https://www.python.org/dev/peps/pep-3155/\n\n.. image:: https://travis-ci.org/wbolster/qualname.svg?branch=master\n   :target: https://travis-ci.org/wbolster/qualname\n\n.. image:: https://pypip.in/download/qualname/badge.svg\n\
    \   :target: https://pypi.python.org/pypi/qualname/\n   :alt: Downloads\n\n.. image:: https://pypip.in/version/qualname/badge.svg\n   :target: https://pypi.python.org/pypi/qualname/\n   :alt: Latest\
    \ Version\n\n.. image:: https://pypip.in/py_versions/qualname/badge.svg\n   :target: https://pypi.python.org/pypi/qualname/\n   :alt: Supported Python versions\n\n.. image:: https://pypip.in/status/qualname/badge.svg\n\
    \   :target: https://pypi.python.org/pypi/qualname/\n   :alt: Development Status\n\n.. image:: https://pypip.in/license/qualname/badge.svg\n   :target: https://pypi.python.org/pypi/qualname/\n   :alt:\
    \ License\n\nInstallation\n============\n\n::\n\n  pip install qualname\n\n\nUsage\n=====\n\nAssume these definitions:\n\n::\n\n  class C:\n      def f():\n          pass\n\n      class D:\n       \
    \   def g():\n              pass\n\nIn Python 3.3+, classes have a ``__qualname__`` property::\n\n  >>> C.__qualname__\n  'C'\n  >>> C.f.__qualname__\n  'C.f'\n  >>> C.D.__qualname__\n  'C.D'\n  >>>\
    \ C.D.g.__qualname__\n  'C.D.g'\n\nUnfortunately, Python 2 and early Python 3 versions do not have an (obvious)\nequivalent. ``qualname`` to the rescue::\n\n  from qualname import qualname\n\n  >>>\
    \ qualname(C)\n  'C'\n  >>> qualname(C.f)\n  'C.f'\n  >>> qualname(C.D)\n  'C.D'\n  >>> qualname(C.D.g)\n  'C.D.g'\n\nVictory!\n\n\nHow does it work?\n=================\n\nGlad you ask.\n\nThis module\
    \ uses source code inspection to figure out how (nested) classes and\nfunctions are defined in order to determine the qualified names for them. That\nmeans parsing the source file, and traversing the\
    \ AST (abstract syntax tree).\nThis sounds very hacky, and it is, but the Python interpreter itself does not\nhave the necessary information, so this justifies extreme measures.\n\nNow that you know\
    \ how it works, you'll also understand that this module only\nworks when the source file is available. Fortunately this is the case in most\ncircumstances.\n\n\nLicense\n=======\n\nBSD.\n\n\nFeedback?\
    \ Issues?\n=================\n\nhttps://github.com/wbolster/qualname"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
